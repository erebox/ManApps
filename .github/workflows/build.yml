name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch: # opzionale: permette di avviare manualmente il build

permissions:
  contents: write

jobs:
  build-and-release:
    name: Build and create release
    runs-on: windows-latest

    steps:
      # 1 - Checkout del repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2 - Installa MSYS2 + MinGW (per windres e g++)
      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: mingw-w64-x86_64-gcc mingw-w64-x86_64-binutils

      # 3 -  Compila il programma
      - name:  Build executable
        shell: msys2 {0}
        run: |
          echo "Compiling resource file..."
          windres res/ManApps.rc -O coff -o ManApps.o
          echo "Compiling main C++ source..."
          g++ -Wall -O2 -mwindows src/ManApps.cpp ManApps.o -o ManApps.exe
          echo "Build completed: ManApps.exe"

      # 4 - Prepara cartella release (usando CMD)
      - name: Package Release
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path release | Out-Null
          Copy-Item ManApps.exe release\
          if (Test-Path samples\ManApps.cfg) { Copy-Item samples\ManApps.cfg release\ }
          $zipName = "ManApps-${{ github.ref_name }}.zip"
          Compress-Archive -Path release\* -DestinationPath $zipName
          Write-Host "Created archive: $zipName"

      # 5 - Crea release GitHub e allega ZIP
      - name: Upload Release
        uses: softprops/action-gh-release@v2
        with:
          name: "ManApps ${{ github.ref_name }}"
          tag_name: ${{ github.ref_name }}
          body: |
            Il pacchetto `ManApps-${{ github.ref_name }}.zip` contiene:
            - `ManApps.exe`
            - file di configurazione (`ManApps.cfg`)
          files: ManApps-${{ github.ref_name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN  }}
